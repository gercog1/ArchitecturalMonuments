@model ArchitectureMonuments.Models.Monument

<!--<div class="main-photo" style="background:url(@Model.main_photo_path)"><</div>-->
@{ 
    string newAddress = Model.adress.Substring(0, Model.adress.Length - 2) + ",Lviv,Ukraine";
}

<head>
    
    <style>
        #map {
            margin-top: 30px;
            width: 100%;
            height: 500px;
            border-radius: 10px;
        }
    </style>

    
   
</head>
<body>
    <img class="main-photo" src="@Model.main_photo_path" />
    <div class="modal-content">

        <div class="modal-header">
            <div class="row">
                <div class="col-md-6">
                    <div class="monument-name">@Model.name</div>
                </div>
                <div class="col-md-3 col-md-offset-2">
                    <div class="adress-line">
                        Адреса: <br />@Model.adress

                    </div>
                </div>
                <div class="col-md-1">
                    <div class="like-line"><img src="~/Content/img/like.svg" alt="like" width="30" height="30"><span class="numoflikes-line">@Model.likes</span></div>
                </div>
            </div>
        </div>

        <div class="modal-body">

            <div class="row">
                <div class="col-md-7">
                    <div class="description-line">@Model.description</div>
                    <div id="map"></div>
                </div>
                <div class="col-md-5 ">
                    <div class="comments">


                    </div>
                </div>

                
            </div>

            <div id="map"></div>
            <script type="text/javascript">
                function initMap() {
                    var map = new google.maps.Map(document.getElementById('map'), {
                        zoom: 17,
                        center: { lat: -34.397, lng: 150.644 }
                    });
                    var geocoder = new google.maps.Geocoder();


                    geocodeAddress(geocoder, map);

                }

                function geocodeAddress(geocoder, resultsMap) {

                    var address = "Наукова 21, Львів, Україна";
                    address = decodeURIComponent(address);
                    geocoder.geocode({ 'address': address }, function (results, status) {
                        if (status === 'OK') {
                            resultsMap.setCenter(results[0].geometry.location);

                            var marker = new google.maps.Marker({
                                map: resultsMap,
                                position: results[0].geometry.location
                            });
                        } else {
                            alert('Geocode was not successful for the following reason: ' + status);
                        }
                    });
                }
            </script>
            






            <!--@{
                 string[] images = Model.sub_photo_path.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);
             }
             @foreach (var i in images)
             {
                 <img src="@i" width="570" height="400" /> <br />
             }
             -->

        </div>
        <script async defer
                src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCearFRazfBuhb5dLITBhnew4NPWueLDQw&v=3&callback=initMap">
        </script>

    </div>
</body>